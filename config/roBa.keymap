#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

#define MOUSE 4
#define SCROLL 5
#define NUM 6

&mt {
    flavor = "balanced";
    quick-tap-ms = <0>;
};

/ {
    combos {
        compatible = "zmk,combos";

        HIRAGANA {
            bindings = <&kp LANGUAGE_1>;
            key-positions = <32 31>;
            layers = <0>;
        };

        EIJI {
            bindings = <&kp LANGUAGE_2>;
            key-positions = <23 24>;
            layers = <0>;
        };

        Layer_0 {
            bindings = <&sl 0>;
            key-positions = <31 32>;
            layers = <4>;
        };
    };

    macros {
        to_layer_0: to_layer_0 {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings = <&to 0 &macro_param_1to1 &kp MACRO_PLACEHOLDER>;
            label = "TO_LAYER_0";
        };

        alt_space_wait_n: alt_space_wait_n {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LA(SPACE)>, <&macro_wait_time 500>, <&kp N>;

            label = "ALT_SPACE_WAIT_N";
        };

        alt_space_wait_x: alt_space_wait_x {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LA(SPACE)>, <&macro_wait_time 500>, <&kp X>;

            label = "ALT_SPACE_WAIT_X";
        };
    };

    behaviors {
        lt_to_layer_0: lt_to_layer_0 {
            compatible = "zmk,behavior-hold-tap";
            label = "LAYER_TAP_TO_0";
            bindings = <&mo>, <&to_layer_0>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        Default {
            bindings = <
&kp Q       &kp L         &kp U       &kp COMMA  &kp PERIOD                                           &kp F      &kp W    &kp R    &kp Y    &kp P
&kp E       &lt 6 I       &lt 4 A     &lt 2 O    &kp MINUS     &mo 7               &kp LEFT_WIN       &kp K      &lt 1 T  &lt 3 N  &lt 5 S  &kp H
&kp Z       &kp X         &kp C       &kp V      &kp QUESTION  &kp TAB             &kp LG(LS(SPACE))  &kp G      &kp D    &kp M    &kp J    &kp B
&kp ESCAPE  &kp LEFT_ALT  &kp DELETE  &kp LCTRL  &kp SPACE     &kp LEFT_SHIFT      &kp BACKSPACE      &kp ENTER                             &sl 4
            >;

            sensor-bindings = <&inc_dec_kp PG_UP PAGE_DOWN>;
        };

        Symbol_Left {
            bindings = <
&kp PIPE         &kp LESS_THAN  &kp GREATER_THAN  &kp LEFT_BRACE        &kp RIGHT_BRACE                                           &none      &none  &none  &none  &none
&kp EXCLAMATION  &kp GRAVE      &kp EQUAL         &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &none               &none          &none      &none  &none  &none  &none
&none            &kp SQT        &kp CARET         &kp LEFT_BRACKET      &kp RIGHT_BRACKET      &none               &none          &none      &none  &none  &none  &none
&none            &none          &none             &kp LCTRL             &kp SPACE              &kp LEFT_SHIFT      &kp BACKSPACE  &kp ENTER                       &none
            >;

            sensor-bindings = <&inc_dec_kp PG_UP PG_DN>;
        };

        Symbol_Right {
            bindings = <
&none  &none  &none  &none      &none                                         &kp DOUBLE_QUOTES  &kp PERCENT    &kp AMPERSAND  &kp BACKSLASH  &kp DOLLAR
&none  &none  &none  &none      &none      &none               &none          &kp TILDE          &kp SLASH      &kp HASH       &kp ASTERISK   &kp AT_SIGN
&none  &none  &none  &none      &none      &none               &none          &kp UNDERSCORE     &kp SEMICOLON  &kp COLON      &kp PLUS       &none
&none  &none  &none  &kp LCTRL  &kp SPACE  &kp LEFT_SHIFT      &kp BACKSPACE  &kp ENTER                                                       &none
            >;

            sensor-bindings = <&inc_dec_kp PG_UP PG_DN>;
        };

        WindowsKey {
            bindings = <
&kp LC(TAB)          &kp LG(T)            &kp LG(UP_ARROW)     &kp LG(B)            &alt_space_wait_n                                        &none      &none  &none  &none  &none
&kp LA(TAB)          &kp LG(LEFT_ARROW)   &kp LG(DOWN_ARROW)   &kp LG(RIGHT_ARROW)  &alt_space_wait_x    &none                &none          &none      &none  &none  &none  &none
&kp LG(KP_NUMBER_1)  &kp LG(KP_NUMBER_2)  &kp LG(KP_NUMBER_3)  &kp LG(KP_NUMBER_4)  &kp LG(KP_NUMBER_5)  &kp KP_NUMBER_6      &none          &none      &none  &none  &none  &none
&none                &none                &none                &kp LCTRL            &kp SPACE            &kp LEFT_SHIFT       &kp BACKSPACE  &kp ENTER                       &none
            >;

            sensor-bindings = <&inc_dec_kp PG_UP PG_DN>;
        };

        Mouse {
            bindings = <
&none  &none  &none  &none      &none                                         &kp LG(LS(LEFT_ARROW))  &kp HOME        &kp UP_ARROW    &kp END          &kp LG(LS(RIGHT_ARROW))
&none  &none  &none  &none      &none      &none               &kp K_UNDO     &kp PG_UP               &kp LEFT_ARROW  &kp DOWN_ARROW  &kp RIGHT_ARROW  &kp LC(C)
&none  &none  &none  &none      &none      &none               &kp K_AGAIN    &kp PG_DN               &mkp MB1        &mkp MB2        &mkp MB3         &kp LC(V)
&none  &none  &none  &kp LCTRL  &kp SPACE  &kp LEFT_SHIFT      &kp BACKSPACE  &kp ENTER                                                                &kp LC(X)
            >;

            sensor-bindings = <&inc_dec_kp PG_UP PG_DN>;
        };

        HotKey {
            bindings = <
&kp LC(LS(LA(KP_NUMBER_0)))  &kp LS(LA(LC(KP_NUMBER_1)))  &kp LS(LC(LA(KP_NUMBER_2)))  &kp LS(LA(LC(KP_NUMBER_3)))  &kp LS(LA(LC(KP_NUMBER_4)))                                        &none      &none  &none  &none  &none
&kp LS(LA(LC(KP_NUMBER_5)))  &kp LS(LA(LC(KP_NUMBER_6)))  &kp LS(LA(LC(KP_NUMBER_7)))  &kp LS(LA(LC(KP_NUMBER_8)))  &kp LS(LA(LC(KP_NUMBER_9)))  &none                  &none          &none      &none  &none  &none  &none
&kp LS(LA(LC(A)))            &kp LS(LA(LC(B)))            &kp LS(LA(LC(C)))            &kp LS(LA(LC(D)))            &kp LS(LA(E))                &kp LS(LA(LC(F)))      &none          &none      &none  &none  &none  &none
&kp LS(LA(LC(G)))            &kp LS(LA(LC(H)))            &kp LS(LA(I))                &kp LEFT_CONTROL             &kp SPACE                    &kp LEFT_SHIFT         &kp BACKSPACE  &kp ENTER                       &none
            >;

            sensor-bindings = <&inc_dec_kp PG_UP PG_DN>;
        };

        Number {
            bindings = <
&none  &none  &none  &none      &none                                         &kp MINUS        &kp KP_NUMBER_7  &kp KP_NUMBER_8  &kp KP_NUMBER_9  &kp CLEAR
&none  &none  &none  &none      &none      &none               &kp SLASH      &kp PLUS         &kp KP_NUMBER_4  &kp KP_NUMBER_5  &kp KP_NUMBER_6  &kp PERIOD
&none  &none  &none  &none      &none      &none               &kp ASTERISK   &kp KP_NUMBER_0  &kp KP_NUMBER_1  &kp KP_NUMBER_2  &kp KP_NUMBER_3  &kp COMMA
&none  &none  &none  &kp LCTRL  &kp SPACE  &kp LEFT_SHIFT      &kp BACKSPACE  &lt 8 ENTER                                                         &kp EQUAL
            >;

            sensor-bindings = <&inc_dec_kp LC(PAGE_UP) LC(PAGE_DOWN)>;
        };

        Bluetooth {
            bindings = <
&bt BT_SEL 0    &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4                          &none  &none  &none  &none  &none
&none           &none         &none         &none         &none         &none      &none        &none  &none  &none  &none  &none
&bt BT_CLR      &none         &none         &none         &none         &none      &bootloader  &none  &none  &none  &none  &none
&bt BT_CLR_ALL  &none         &none         &none         &none         &none      &none        &none                       &none
            >;
        };

        Function {
            bindings = <
&none  &none  &none  &none  &none                    &none  &kp F7  &kp F8  &kp F9  &kp F10
&none  &none  &none  &none  &none  &none      &none  &none  &kp F4  &kp F5  &kp F6  &kp F11
&none  &none  &none  &none  &none  &none      &none  &none  &kp F1  &kp F2  &kp F3  &kp F12
&none  &none  &none  &none  &none  &none      &none  &none                          &none
            >;
        };
    };
};
